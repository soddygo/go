<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <!-- 注解扫描controller -->
    <context:component-scan base-package="com" use-default-filters="false">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller" />
    </context:component-scan>

    <!-- 静态资源放行 -->
    <mvc:annotation-driven/>
    <mvc:resources location="/static/" mapping="/static/**"/>
    <mvc:resources location="/" mapping="/index.html"/>
    <mvc:resources location="/" mapping="/login.html"/>


    <!-- 视图解析器 -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/"/>
        <property name="suffix" value=".html"/>
        <property name="contentType" value="text/html;charset=UTF8" />
    </bean>

    <!-- 文件上传处理 -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="defaultEncoding" value="UTF-8" />
        <property name="maxUploadSize">
            <value>3897392060</value>
        </property>
        <property name="maxInMemorySize">
            <value>4096</value>
        </property>
    </bean>

    <!-- 处理JSON数据转换的 -->
    <bean id="mappingJacksonHttp2MessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
        <property name="supportedMediaTypes">
            <list>
                <value>text/html;charset=UTF-8</value>
            </list>
        </property>
    </bean>

    <!-- shiro注解配置 (必须配置在springmvc配置文件中注解才能生效) -->
    <!-- 后处理Bean 通过代理进行拦截 -->
    <!--<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />-->
    <!--&lt;!&ndash; 配置切面，使方法能够接收注解的权限控制 &ndash;&gt;-->
    <!--<bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" depends-on="lifecycleBeanPostProcessor" >-->
        <!--<property name="proxyTargetClass" value="true" />-->
    <!--</bean>-->
    <!--<bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">-->
        <!--<property name="securityManager" ref="securityManager" />-->
    <!--</bean>-->
</beans>